{"version":3,"file":"724.05463ed65e27a8a9.bundle.js","mappings":"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","sources":["webpack://WebComponents/./runestone/fitb/js/fitb-i18n.en.js","webpack://WebComponents/./runestone/fitb/js/fitb-i18n.pt-br.js","webpack://WebComponents/./runestone/fitb/js/fitb.js","webpack://WebComponents/./runestone/fitb/js/timedfitb.js","webpack://WebComponents/./runestone/shortanswer/js/shortanswer.js","webpack://WebComponents/./runestone/shortanswer/js/timed_shortanswer.js","webpack://WebComponents/./runestone/timed/js/timed.js"],"sourcesContent":["$.i18n().load({\n    en: {\n        msg_no_answer: \"No answer provided.\",\n        msg_fitb_check_me: \"Check me\",\n        msg_fitb_compare_me: \"Compare me\",\n    },\n});\n","$.i18n().load({\n    \"pt-br\": {\n        msg_no_answer: \"Nenhuma resposta dada.\",\n        msg_fitb_check_me: \"Verificar\",\n        msg_fitb_compare_me: \"Comparar\"\n    },\n});\n","// *********\n// |docname|\n// *********\n// This file contains the JS for the Runestone fillintheblank component. It was created By Isaiah Mayerchak and Kirby Olson, 6/4/15 then revised by Brad Miller, 2/7/20.\n\"use strict\";\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport \"./fitb-i18n.en.js\";\nimport \"./fitb-i18n.pt-br.js\";\nimport \"../css/fitb.css\";\n\nexport var FITBList = {}; // Object containing all instances of FITB that aren't a child of a timed assessment.\n\n// FITB constructor\nexport default class FITB extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig; // entire <p> element\n        this.useRunestoneServices = opts.useRunestoneServices;\n        this.origElem = orig;\n        this.divid = orig.id;\n        this.correct = null;\n        // See comments in fitb.py for the format of ``feedbackArray`` (which is identical in both files).\n        //\n        // Find the script tag containing JSON and parse it. See `SO <https://stackoverflow.com/questions/9320427/best-practice-for-embedding-arbitrary-json-in-the-dom>`_. If this parses to ``false``, then no feedback is available; server-side grading will be performed.\n        this.feedbackArray = JSON.parse(\n            this.scriptSelector(this.origElem).html()\n        );\n        this.createFITBElement();\n        this.caption = \"Fill in the Blank\";\n        this.addCaption(\"runestone\");\n        this.checkServer(\"fillb\", true);\n        if (typeof Prism !== \"undefined\") {\n            Prism.highlightAllUnder(this.containerDiv);\n        }\n    }\n    // Find the script tag containing JSON in a given root DOM node.\n    scriptSelector(root_node) {\n        return $(root_node).find(`script[type=\"application/json\"]`);\n    }\n    /*===========================================\n    ====   Functions generating final HTML   ====\n    ===========================================*/\n    createFITBElement() {\n        this.renderFITBInput();\n        this.renderFITBButtons();\n        this.renderFITBFeedbackDiv();\n        // replaces the intermediate HTML for this component with the rendered HTML of this component\n        $(this.origElem).replaceWith(this.containerDiv);\n    }\n    renderFITBInput() {\n        // The text [input] elements are created by the template.\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.divid;\n        // Copy the original elements to the container holding what the user will see.\n        $(this.origElem).children().clone().appendTo(this.containerDiv);\n        // Remove the script tag.\n        this.scriptSelector(this.containerDiv).remove();\n        // Set the class for the text inputs, then store references to them.\n        let ba = $(this.containerDiv).find(\":input\");\n        ba.attr(\"class\", \"form form-control selectwidthauto\");\n        ba.attr(\"aria-label\", \"input area\");\n        this.blankArray = ba.toArray();\n        // When a blank is changed mark this component as interacted with.\n        // And set a class on the component in case we want to render components that have been used\n        // differently\n        for (let blank of this.blankArray) {\n            $(blank).change(this.recordAnswered.bind(this));\n        }\n    }\n\n    recordAnswered() {\n        this.isAnswered = true;\n        //let rcontainer = this.containerDiv.closest(\".runestone\");\n        //rcontainer.addClass(\"answered\");\n    }\n\n    renderFITBButtons() {\n        // \"submit\" button and \"compare me\" button\n        this.submitButton = document.createElement(\"button\");\n        this.submitButton.textContent = $.i18n(\"msg_fitb_check_me\");\n        $(this.submitButton).attr({\n            class: \"btn btn-success\",\n            name: \"do answer\",\n            type: \"button\",\n        });\n        this.submitButton.addEventListener(\n            \"click\",\n            function () {\n                this.checkCurrentAnswer();\n                this.logCurrentAnswer();\n            }.bind(this),\n            false\n        );\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.containerDiv.appendChild(this.submitButton);\n        if (this.useRunestoneServices) {\n            this.compareButton = document.createElement(\"button\");\n            $(this.compareButton).attr({\n                class: \"btn btn-default\",\n                id: this.origElem.id + \"_bcomp\",\n                disabled: \"\",\n                name: \"compare\",\n            });\n            this.compareButton.textContent = $.i18n(\"msg_fitb_compare_me\");\n            this.compareButton.addEventListener(\n                \"click\",\n                function () {\n                    this.compareFITBAnswers();\n                }.bind(this),\n                false\n            );\n            this.containerDiv.appendChild(this.compareButton);\n        }\n        this.containerDiv.appendChild(document.createElement(\"div\"));\n    }\n    renderFITBFeedbackDiv() {\n        this.feedBackDiv = document.createElement(\"div\");\n        this.feedBackDiv.id = this.divid + \"_feedback\";\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.containerDiv.appendChild(this.feedBackDiv);\n    }\n    /*===================================\n    === Checking/loading from storage ===\n    ===================================*/\n    restoreAnswers(data) {\n        var arr;\n        // Restore answers from storage retrieval done in RunestoneBase.\n        try {\n            // The newer format encodes data as a JSON object.\n            arr = JSON.parse(data.answer);\n            // The result should be an array. If not, try comma parsing instead.\n            if (!Array.isArray(arr)) {\n                throw new Error();\n            }\n        } catch (err) {\n            // The old format didn't.\n            arr = data.answer.split(\",\");\n        }\n        for (var i = 0; i < this.blankArray.length; i++) {\n            $(this.blankArray[i]).attr(\"value\", arr[i]);\n        }\n        // Use the feedback from the server, or recompute it locally.\n        if (!this.feedbackArray) {\n            this.displayFeed = data.displayFeed;\n            this.correct = data.correct;\n            this.isCorrectArray = data.isCorrectArray;\n            // Only render if all the data is present; local storage might have old data missing some of these items.\n            if (\n                typeof this.displayFeed !== \"undefined\" &&\n                typeof this.correct !== \"undefined\" &&\n                typeof this.isCorrectArray !== \"undefined\"\n            ) {\n                this.renderFeedback();\n            }\n        } else {\n            this.checkCurrentAnswer();\n        }\n    }\n    checkLocalStorage() {\n        // Loads previous answers from local storage if they exist\n        var storedData;\n        if (this.graderactive) {\n            return;\n        }\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                try {\n                    storedData = JSON.parse(ex);\n                    var arr = storedData.answer;\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    return;\n                }\n                this.restoreAnswers(storedData);\n            }\n        }\n    }\n    setLocalStorage(data) {\n        let key = this.localStorageKey();\n        localStorage.setItem(key, JSON.stringify(data));\n    }\n\n    checkCurrentAnswer() {\n        // Start of the evaluation chain\n        this.isCorrectArray = [];\n        this.displayFeed = [];\n        this.given_arr = [];\n        for (var i = 0; i < this.blankArray.length; i++)\n            this.given_arr.push(this.blankArray[i].value);\n        if (this.useRunestoneServices) {\n            if (eBookConfig.enableCompareMe) {\n                this.enableCompareButton();\n            }\n        }\n        // Grade locally if we can't ask the server to grade.\n        if (this.feedbackArray) {\n            this.evaluateAnswers();\n            if (!this.isTimed) {\n                this.renderFeedback();\n            }\n        }\n    }\n\n    async logCurrentAnswer(sid) {\n        let answer = JSON.stringify(this.given_arr);\n        // Save the answer locally.\n        let feedback = true;\n        this.setLocalStorage({\n            answer: answer,\n            timestamp: new Date(),\n        });\n        let data = {\n            event: \"fillb\",\n            act: answer || \"\",\n            answer: answer || \"\",\n            correct: this.correct ? \"T\" : \"F\",\n            div_id: this.divid,\n        };\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n            feedback = false;\n        }\n        // Per `logBookEvent <logBookEvent>`, the result is undefined if there's no server. Otherwise, the server provides the endpoint-specific results in ``data.details``; see `make_json_response`.\n        data = await this.logBookEvent(data);\n        let detail = data && data.detail;\n        if (!feedback) return;\n        if (!this.feedbackArray) {\n            // On success, update the feedback from the server's grade.\n            this.setLocalStorage({\n                answer: answer,\n                timestamp: detail.timestamp,\n            });\n            this.correct = detail.correct;\n            this.displayFeed = detail.displayFeed;\n            this.isCorrectArray = detail.isCorrectArray;\n            if (!this.isTimed) {\n                this.renderFeedback();\n            }\n        }\n        return detail;\n    }\n\n    /*==============================\n    === Evaluation of answer and ===\n    ===     display feedback     ===\n    ==============================*/\n    // Inputs:\n    //\n    // - Strings entered by the student in ``this.blankArray[i].value``.\n    // - Feedback in ``this.feedbackArray``.\n    //\n    // Outputs:\n    //\n    // - ``this.displayFeed`` is an array of HTML feedback.\n    // - ``this.isCorrectArray`` is an array of true, false, or null (the question wasn't answered).\n    // - ``this.correct`` is true, false, or null (the question wasn't answered).\n    evaluateAnswers() {\n        // Keep track if all answers are correct or not.\n        this.correct = true;\n        for (var i = 0; i < this.blankArray.length; i++) {\n            var given = this.blankArray[i].value;\n            // If this blank is empty, provide no feedback for it.\n            if (given === \"\") {\n                this.isCorrectArray.push(null);\n                this.displayFeed.push($.i18n(\"msg_no_answer\"));\n                this.correct = false;\n            } else {\n                // Look through all feedback for this blank. The last element in the array always matches. If no feedback for this blank exists, use an empty list.\n                var fbl = this.feedbackArray[i] || [];\n                for (var j = 0; j < fbl.length; j++) {\n                    // The last item of feedback always matches.\n                    if (j === fbl.length - 1) {\n                        this.displayFeed.push(fbl[j][\"feedback\"]);\n                        break;\n                    }\n                    // If this is a regexp...\n                    if (\"regex\" in fbl[j]) {\n                        var patt = RegExp(\n                            fbl[j][\"regex\"],\n                            fbl[j][\"regexFlags\"]\n                        );\n                        if (patt.test(given)) {\n                            this.displayFeed.push(fbl[j][\"feedback\"]);\n                            break;\n                        }\n                    } else {\n                        // This is a number.\n                        console.assert(\"number\" in fbl[j]);\n                        var [min, max] = fbl[j][\"number\"];\n                        // Convert the given string to a number. While there are `lots of ways <https://coderwall.com/p/5tlhmw/converting-strings-to-number-in-javascript-pitfalls>`_ to do this; this version supports other bases (hex/binary/octal) as well as floats.\n                        var actual = +given;\n                        if (actual >= min && actual <= max) {\n                            this.displayFeed.push(fbl[j][\"feedback\"]);\n                            break;\n                        }\n                    }\n                }\n                // The answer is correct if it matched the first element in the array. A special case: if only one answer is provided, count it wrong; this is a misformed problem.\n                let is_correct = j === 0 && fbl.length > 1;\n                this.isCorrectArray.push(is_correct);\n                if (!is_correct) {\n                    this.correct = false;\n                }\n            }\n        }\n        this.percent =\n            this.isCorrectArray.filter(Boolean).length / this.blankArray.length;\n    }\n\n    renderFeedback() {\n        if (this.correct) {\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-info\");\n            for (let j = 0; j < this.blankArray.length; j++) {\n                $(this.blankArray[j]).removeClass(\"input-validation-error\");\n            }\n        } else {\n            if (this.displayFeed === null) {\n                this.displayFeed = \"\";\n            }\n            for (let j = 0; j < this.blankArray.length; j++) {\n                if (this.isCorrectArray[j] !== true) {\n                    $(this.blankArray[j]).addClass(\"input-validation-error\");\n                } else {\n                    $(this.blankArray[j]).removeClass(\"input-validation-error\");\n                }\n            }\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-danger\");\n        }\n        var feedback_html = \"<ul>\";\n        for (var i = 0; i < this.displayFeed.length; i++) {\n            feedback_html += \"<li>\" + this.displayFeed[i] + \"</li>\";\n        }\n        feedback_html += \"</ul>\";\n        // Remove the list if it's just one element.\n        if (this.displayFeed.length == 1) {\n            feedback_html = feedback_html.slice(\n                \"<ul><li>\".length,\n                -\"</li></ul>\".length\n            );\n        }\n        this.feedBackDiv.innerHTML = feedback_html;\n        if (typeof MathJax !== \"undefined\") {\n            this.queueMathJax(document.body);\n        }\n    }\n\n    /*==================================\n    === Functions for compare button ===\n    ==================================*/\n    enableCompareButton() {\n        this.compareButton.disabled = false;\n    }\n    // _`compareFITBAnswers`\n    compareFITBAnswers() {\n        var data = {};\n        data.div_id = this.divid;\n        data.course = eBookConfig.course;\n        jQuery.get(\n            `${eBookConfig.new_server_prefix}/assessment/gettop10Answers`,\n            data,\n            this.compareFITB\n        );\n    }\n    compareFITB(data, status, whatever) {\n        var answers = data.detail.res;\n        var misc = data.detail.miscdata;\n        var body = \"<table>\";\n        body += \"<tr><th>Answer</th><th>Count</th></tr>\";\n        for (var row in answers) {\n            body +=\n                \"<tr><td>\" +\n                answers[row].answer +\n                \"</td><td>\" +\n                answers[row].count +\n                \" times</td></tr>\";\n        }\n        body += \"</table>\";\n        var html =\n            \"<div class='modal fade'>\" +\n            \"    <div class='modal-dialog compare-modal'>\" +\n            \"        <div class='modal-content'>\" +\n            \"            <div class='modal-header'>\" +\n            \"                <button type='button' class='close' data-dismiss='modal' aria-hidden='true'>&times;</button>\" +\n            \"                <h4 class='modal-title'>Top Answers</h4>\" +\n            \"            </div>\" +\n            \"            <div class='modal-body'>\" +\n            body +\n            \"            </div>\" +\n            \"        </div>\" +\n            \"    </div>\" +\n            \"</div>\";\n        var el = $(html);\n        el.modal();\n    }\n\n    disableInteraction() {\n        for (var i = 0; i < this.blankArray.length; i++) {\n            this.blankArray[i].disabled = true;\n        }\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\n$(document).on(\"runestone:login-complete\", function () {\n    $(\"[data-component=fillintheblank]\").each(function (index) {\n        var opts = {\n            orig: this,\n            useRunestoneServices: eBookConfig.useRunestoneServices,\n        };\n        if ($(this).closest(\"[data-component=timedAssessment]\").length == 0) {\n            // If this element exists within a timed component, don't render it here\n            try {\n                FITBList[this.id] = new FITB(opts);\n            } catch (err) {\n                console.log(\n                    `Error rendering Fill in the Blank Problem ${this.id}\n                     Details: ${err}`\n                );\n            }\n        }\n    });\n});\n","import FITB from \"./fitb.js\";\nexport default class TimedFITB extends FITB {\n    constructor(opts) {\n        super(opts);\n        this.renderTimedIcon(this.inputDiv);\n        this.hideButtons();\n        this.needsReinitialization = true;\n    }\n    hideButtons() {\n        $(this.submitButton).hide();\n        $(this.compareButton).hide();\n    }\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    checkCorrectTimed() {\n        // Returns if the question was correct, incorrect, or skipped (return null in the last case)\n        switch (this.correct) {\n            case true:\n                return \"T\";\n            case false:\n                return \"F\";\n            default:\n                return null;\n        }\n    }\n    hideFeedback() {\n        for (var i = 0; i < this.blankArray.length; i++) {\n            $(this.blankArray[i]).removeClass(\"input-validation-error\");\n        }\n        this.feedBackDiv.style.display = \"none\";\n    }\n\n    reinitializeListeners() {\n        for (let blank of this.blankArray) {\n            $(blank).change(this.recordAnswered.bind(this));\n        }\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\nwindow.component_factory.fillintheblank = function (opts) {\n    if (opts.timed) {\n        return new TimedFITB(opts);\n    }\n    return new FITB(opts);\n};\n","/*==========================================\n=======    Master shortanswer.js    ========\n============================================\n===     This file contains the JS for    ===\n=== the Runestone shortanswer component. ===\n============================================\n===              Created by              ===\n===           Isaiah Mayerchak           ===\n===                7/2/15                ===\n===              Brad Miller             ===\n===                2019                  ===\n==========================================*/\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport \"./../css/shortanswer.css\";\n\nexport var saList;\nif (saList === undefined) saList = {}; // Dictionary that contains all instances of shortanswer objects\n\nexport default class ShortAnswer extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        if (opts) {\n            var orig = opts.orig; // entire <p> element that will be replaced by new HTML\n            this.useRunestoneServices =\n                opts.useRunestoneServices || eBookConfig.useRunestoneServices;\n            this.origElem = orig;\n            this.divid = orig.id;\n            this.question = this.origElem.innerHTML;\n            this.optional = false;\n            this.attachURL = opts.attachURL;\n            if ($(this.origElem).is(\"[data-optional]\")) {\n                this.optional = true;\n            }\n            if ($(this.origElem).is(\"[data-mathjax]\")) {\n                this.mathjax = true;\n            }\n            if ($(this.origElem).is(\"[data-attachment]\")) {\n                this.attachment = true;\n            }\n            this.placeholder =\n                $(this.origElem).data(\"placeholder\") ||\n                \"Write your answer here\";\n            this.renderHTML();\n            this.caption = \"shortanswer\";\n            this.addCaption(\"runestone\");\n            this.checkServer(\"shortanswer\", true);\n            if (typeof Prism !== \"undefined\") {\n                Prism.highlightAllUnder(this.containerDiv);\n            }\n        }\n    }\n\n    renderHTML() {\n        this.containerDiv = document.createElement(\"div\");\n        this.containerDiv.id = this.divid;\n        $(this.containerDiv).addClass(this.origElem.getAttribute(\"class\"));\n        this.newForm = document.createElement(\"form\");\n        this.newForm.id = this.divid + \"_journal\";\n        this.newForm.name = this.newForm.id;\n        this.newForm.action = \"\";\n        this.containerDiv.appendChild(this.newForm);\n        this.fieldSet = document.createElement(\"fieldset\");\n        this.newForm.appendChild(this.fieldSet);\n        this.firstLegendDiv = document.createElement(\"div\");\n        this.firstLegendDiv.innerHTML = this.question;\n        $(this.firstLegendDiv).addClass(\"journal-question\");\n        this.fieldSet.appendChild(this.firstLegendDiv);\n        this.jInputDiv = document.createElement(\"div\");\n        this.jInputDiv.id = this.divid + \"_journal_input\";\n        this.fieldSet.appendChild(this.jInputDiv);\n        this.jOptionsDiv = document.createElement(\"div\");\n        $(this.jOptionsDiv).addClass(\"journal-options\");\n        this.jInputDiv.appendChild(this.jOptionsDiv);\n        this.jLabel = document.createElement(\"label\");\n        $(this.jLabel).addClass(\"radio-inline\");\n        this.jOptionsDiv.appendChild(this.jLabel);\n        this.jTextArea = document.createElement(\"textarea\");\n        let self = this;\n        this.jTextArea.onchange = function() {\n            self.isAnswered = true;\n        };\n        this.jTextArea.id = this.divid + \"_solution\";\n        $(this.jTextArea).attr(\"aria-label\", \"textarea\");\n        this.jTextArea.placeholder = this.placeholder;\n        $(this.jTextArea).css(\"display:inline, width:530px\");\n        $(this.jTextArea).addClass(\"form-control\");\n        this.jTextArea.rows = 4;\n        this.jTextArea.cols = 50;\n        this.jLabel.appendChild(this.jTextArea);\n        this.jTextArea.onchange = function() {\n            this.feedbackDiv.innerHTML = \"Your answer has not been saved yet!\";\n            $(this.feedbackDiv).removeClass(\"alert-success\");\n            $(this.feedbackDiv).addClass(\"alert alert-danger\");\n        }.bind(this);\n        this.fieldSet.appendChild(document.createElement(\"br\"));\n        if (this.mathjax) {\n            this.renderedAnswer = document.createElement(\"div\");\n            $(this.renderedAnswer).addClass(\"latexoutput\");\n            this.fieldSet.appendChild(this.renderedAnswer);\n        }\n        this.buttonDiv = document.createElement(\"div\");\n        this.fieldSet.appendChild(this.buttonDiv);\n        this.submitButton = document.createElement(\"button\");\n        $(this.submitButton).addClass(\"btn btn-success\");\n        this.submitButton.type = \"button\";\n        this.submitButton.textContent = \"Save\";\n        this.submitButton.onclick = function() {\n            this.checkCurrentAnswer();\n            this.logCurrentAnswer();\n            this.renderFeedback();\n        }.bind(this);\n        this.buttonDiv.appendChild(this.submitButton);\n        this.randomSpan = document.createElement(\"span\");\n        this.randomSpan.innerHTML = \"Instructor's Feedback\";\n        this.fieldSet.appendChild(this.randomSpan);\n        this.otherOptionsDiv = document.createElement(\"div\");\n        $(this.otherOptionsDiv).css(\"padding-left:20px\");\n        $(this.otherOptionsDiv).addClass(\"journal-options\");\n        this.fieldSet.appendChild(this.otherOptionsDiv);\n        // add a feedback div to give user feedback\n        this.feedbackDiv = document.createElement(\"div\");\n        //$(this.feedbackDiv).addClass(\"bg-info form-control\");\n        //$(this.feedbackDiv).css(\"width:530px, background-color:#eee, font-style:italic\");\n        $(this.feedbackDiv).css(\"width:530px, font-style:italic\");\n        this.feedbackDiv.id = this.divid + \"_feedback\";\n        this.feedbackDiv.innerHTML = \"You have not answered this question yet.\";\n        $(this.feedbackDiv).addClass(\"alert alert-danger\");\n        //this.otherOptionsDiv.appendChild(this.feedbackDiv);\n        this.fieldSet.appendChild(this.feedbackDiv);\n        if (this.attachment) {\n            let attachDiv = document.createElement(\"div\")\n            if (this.graderactive ) {\n                // If in grading mode make a button to create a popup with the image\n                let viewButton = document.createElement(\"button\")\n                viewButton.type = \"button\"\n                viewButton.innerHTML = \"View Attachment\"\n                viewButton.onclick = this.viewFile.bind(this);\n                attachDiv.appendChild(viewButton);\n            } else {\n                // Otherwise make a button for the student to select a file to upload.\n                this.fileUpload = document.createElement(\"input\")\n                this.fileUpload.type = \"file\";\n                this.fileUpload.id = `${this.divid}_fileme`;\n                attachDiv.appendChild(this.fileUpload);\n            }\n            this.containerDiv.appendChild(attachDiv);\n        }\n        //this.fieldSet.appendChild(document.createElement(\"br\"));\n        $(this.origElem).replaceWith(this.containerDiv);\n        // This is a stopgap measure for when MathJax is not loaded at all.  There is another\n        // more difficult case that when MathJax is loaded asynchronously we will get here\n        // before MathJax is loaded.  In that case we will need to implement something\n        // like `the solution described here <https://stackoverflow.com/questions/3014018/how-to-detect-when-mathjax-is-fully-loaded>`_\n        if (typeof MathJax !== \"undefined\") {\n            this.queueMathJax(this.containerDiv);\n        }\n    }\n\n    renderMath(value) {\n        if (this.mathjax) {\n            value = value.replace(/\\$\\$(.*?)\\$\\$/g, \"\\\\[ $1 \\\\]\");\n            value = value.replace(/\\$(.*?)\\$/g, \"\\\\( $1 \\\\)\");\n            $(this.renderedAnswer).text(value);\n            this.queueMathJax(this.renderedAnswer);\n        }\n    }\n\n    checkCurrentAnswer() {}\n\n    async logCurrentAnswer(sid) {\n        let value = $(document.getElementById(this.divid + \"_solution\")).val();\n        this.renderMath(value);\n        this.setLocalStorage({\n            answer: value,\n            timestamp: new Date(),\n        });\n        let data = {\n            event: \"shortanswer\",\n            act: value,\n            answer: value,\n            div_id: this.divid,\n        };\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n        if (this.attachment) {\n            await this.uploadFile();\n        }\n    }\n\n    renderFeedback() {\n        this.feedbackDiv.innerHTML = \"Your answer has been saved.\";\n        $(this.feedbackDiv).removeClass(\"alert-danger\");\n        $(this.feedbackDiv).addClass(\"alert alert-success\");\n    }\n    setLocalStorage(data) {\n        if (!this.graderactive) {\n            let key = this.localStorageKey();\n            localStorage.setItem(key, JSON.stringify(data));\n        }\n    }\n    checkLocalStorage() {\n        // Repopulates the short answer text\n        // which was stored into local storage.\n        var answer = \"\";\n        if (this.graderactive) {\n            return;\n        }\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                try {\n                    var storedData = JSON.parse(ex);\n                    answer = storedData.answer;\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    return;\n                }\n                let solution = $(\"#\" + this.divid + \"_solution\");\n                solution.text(answer);\n                this.renderMath(answer);\n                this.feedbackDiv.innerHTML =\n                    \"Your current saved answer is shown above.\";\n                $(this.feedbackDiv).removeClass(\"alert-danger\");\n                $(this.feedbackDiv).addClass(\"alert alert-success\");\n            }\n        }\n    }\n    restoreAnswers(data) {\n        // Restore answers from storage retrieval done in RunestoneBase\n        // sometimes data.answer can be null\n        if (!data.answer) {\n            data.answer = \"\";\n        }\n        this.answer = data.answer;\n        this.jTextArea.value = this.answer;\n        this.renderMath(this.answer);\n\n        let p = document.createElement(\"p\");\n        this.jInputDiv.appendChild(p);\n        var tsString = \"\";\n        if (data.timestamp) {\n            tsString = new Date(data.timestamp).toLocaleString();\n        } else {\n            tsString = \"\";\n        }\n        $(p).text(tsString);\n        if (data.last_answer) {\n            this.current_answer = \"ontime\";\n            let toggle_answer_button = document.createElement(\"button\");\n            toggle_answer_button.type = \"button\";\n            $(toggle_answer_button).text(\"Show Late Answer\");\n            $(toggle_answer_button).addClass(\"btn btn-warning\");\n            $(toggle_answer_button).css(\"margin-left\", \"5px\");\n\n            $(toggle_answer_button).click(\n                function() {\n                    var display_timestamp, button_text;\n                    if (this.current_answer === \"ontime\") {\n                        this.jTextArea.value = data.last_answer;\n                        this.answer = data.last_answer;\n                        display_timestamp = new Date(\n                            data.last_timestamp\n                        ).toLocaleString();\n                        button_text = \"Show on-Time Answer\";\n                        this.current_answer = \"late\";\n                    } else {\n                        this.jTextArea.value = data.answer;\n                        this.answer = data.answer;\n                        display_timestamp = tsString;\n                        button_text = \"Show Late Answer\";\n                        this.current_answer = \"ontime\";\n                    }\n                    this.renderMath(this.answer);\n                    $(p).text(`Submitted: ${display_timestamp}`);\n                    $(toggle_answer_button).text(button_text);\n                }.bind(this)\n            );\n\n            this.buttonDiv.appendChild(toggle_answer_button);\n        }\n        let feedbackStr = \"Your current saved answer is shown above.\";\n        if (typeof data.score !== \"undefined\") {\n            feedbackStr = `Score: ${data.score}`;\n        }\n        if (data.comment) {\n            feedbackStr += ` -- ${data.comment}`;\n        }\n        this.feedbackDiv.innerHTML = feedbackStr;\n\n        $(this.feedbackDiv).removeClass(\"alert-danger\");\n        $(this.feedbackDiv).addClass(\"alert alert-success\");\n    }\n\n    disableInteraction() {\n        this.jTextArea.disabled = true;\n    }\n\n    async uploadFile() {\n        const files = this.fileUpload.files\n        const data = new FormData()\n        if (this.fileUpload.files.length > 0) {\n            data.append('file', files[0])\n            fetch(`/ns/logger/upload/${this.divid}`, {\n                    method: 'POST',\n                    body: data\n                })\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data)\n                })\n                .catch(error => {\n                    console.error(error)\n                })\n            }\n    }\n\n    viewFile() {\n        // Get the URL from the S3 API -- saved when we display in grader mode\n        if (this.attachURL) {\n            //window.open(this.attachURL, \"_blank\");\n            const image_window = window.open(\"\", \"_blank\")\n            image_window.document.write(`\n                  <html>\n                    <head>\n                    </head>\n                    <body>\n                      <img src=\"${this.attachURL}\" alt=\"Attachment\" >\n                    </body>\n                  </html>\n            `);\n        } else {\n            alert(\"No attachment for this student.\")\n        }\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\n$(document).on(\"runestone:login-complete\", function() {\n    $(\"[data-component=shortanswer]\").each(function() {\n        if ($(this).closest(\"[data-component=timedAssessment]\").length == 0) {\n            // If this element exists within a timed component, don't render it here\n            try {\n                saList[this.id] = new ShortAnswer({\n                    orig: this,\n                    useRunestoneServices: eBookConfig.useRunestoneServices,\n                });\n            } catch (err) {\n                console.log(`Error rendering ShortAnswer Problem ${this.id}\n                Details: ${err}`);\n            }\n        }\n    });\n});\n","import ShortAnswer from \"./shortanswer.js\";\n\nexport default class TimedShortAnswer extends ShortAnswer {\n    constructor(opts) {\n        super(opts);\n        this.renderTimedIcon(this.containerDiv);\n        this.hideButtons();\n    }\n    hideButtons() {\n        $(this.submitButton).hide();\n    }\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    checkCorrectTimed() {\n        return \"I\"; // we ignore this in the grading\n    }\n    hideFeedback() {\n        $(this.feedbackDiv).hide();\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\n\nwindow.component_factory.shortanswer = function (opts) {\n    if (opts.timed) {\n        return new TimedShortAnswer(opts);\n    }\n    return new ShortAnswer(opts);\n};\n","/*==========================================\n========      Master timed.js     =========\n============================================\n===     This file contains the JS for    ===\n===     the Runestone timed component.   ===\n============================================\n===              Created By              ===\n===             Kirby Olson              ===\n===               6/11/15                ===\n==========================================*/\n\"use strict\";\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\nimport TimedFITB from \"../../fitb/js/timedfitb.js\";\nimport TimedMC from \"../../mchoice/js/timedmc.js\";\nimport TimedShortAnswer from \"../../shortanswer/js/timed_shortanswer.js\";\nimport ACFactory from \"../../activecode/js/acfactory.js\";\nimport TimedClickableArea from \"../../clickableArea/js/timedclickable\";\nimport TimedDragNDrop from \"../../dragndrop/js/timeddnd.js\";\nimport TimedParsons from \"../../parsons/js/timedparsons.js\";\nimport SelectOne from \"../../selectquestion/js/selectone\";\nimport \"../css/timed.css\";\n\nexport var TimedList = {}; // Timed dictionary\n\n// Timed constructor\nexport default class Timed extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        var orig = opts.orig;\n        this.origElem = orig; // the entire element of this timed assessment and all of its children\n        this.divid = orig.id;\n        this.children = this.origElem.childNodes;\n        this.visited = [];\n        this.timeLimit = 0;\n        this.limitedTime = false;\n        if (!isNaN($(this.origElem).data(\"time\"))) {\n            this.timeLimit = parseInt($(this.origElem).data(\"time\"), 10) * 60; // time in seconds to complete the exam\n            this.startingTime = this.timeLimit;\n            this.limitedTime = true;\n        }\n        this.showFeedback = true;\n        if ($(this.origElem).is(\"[data-no-feedback]\")) {\n            this.showFeedback = false;\n        }\n        this.showResults = true;\n        if ($(this.origElem).is(\"[data-no-result]\")) {\n            this.showResults = false;\n        }\n        this.random = false;\n        if ($(this.origElem).is(\"[data-random]\")) {\n            this.random = true;\n        }\n        this.showTimer = true;\n        if ($(this.origElem).is(\"[data-no-timer]\")) {\n            this.showTimer = false;\n        }\n        this.fullwidth = false;\n        if ($(this.origElem).is(\"[data-fullwidth]\")) {\n            this.fullwidth = true;\n        }\n        this.nopause = false;\n        if ($(this.origElem).is(\"[data-no-pause]\")) {\n            this.nopause = true;\n        }\n        eBookConfig.enableScratchAC = false;\n        this.running = 0;\n        this.paused = 0;\n        this.done = 0;\n        this.taken = 0;\n        this.score = 0;\n        this.incorrect = 0;\n        this.correctStr = \"\";\n        this.incorrectStr = \"\";\n        this.skippedStr = \"\";\n        this.skipped = 0;\n        this.currentQuestionIndex = 0; // Which question is currently displaying on the page\n        this.renderedQuestionArray = []; // list of all problems\n        this.getNewChildren();\n        // One small step to eliminate students from doing view source\n        // this won't stop anyone with determination but may prevent casual peeking\n        if (!eBookConfig.enableDebug) {\n            document.body.oncontextmenu = function () {\n                return false;\n            };\n        }\n        this.checkAssessmentStatus().then(\n            function () {\n                this.renderTimedAssess();\n            }.bind(this)\n        );\n    }\n\n    getNewChildren() {\n        this.newChildren = [];\n        let runestoneChildren = this.origElem.querySelectorAll(\".runestone\")\n        for (var i = 0; i < runestoneChildren.length; i++) {\n            this.newChildren.push(runestoneChildren[i]);\n        }\n    }\n\n    async checkAssessmentStatus() {\n        // Has the user taken this exam?  Inquiring minds want to know\n        // If a user has not taken this exam then we want to make sure\n        // that if a question has been seen by the student before we do\n        // not populate previous answers.\n        let sendInfo = {\n            div_id: this.divid,\n            course_name: eBookConfig.course,\n        };\n        console.log(sendInfo);\n        if (eBookConfig.useRunestoneServices) {\n            let request = new Request(\n                `${eBookConfig.new_server_prefix}/assessment/tookTimedAssessment`,\n                {\n                    method: \"POST\",\n                    headers: this.jsonHeaders,\n                    body: JSON.stringify(sendInfo),\n                }\n            );\n            let response = await fetch(request);\n            let data = await response.json();\n            data = data.detail;\n            this.taken = data.tookAssessment;\n            this.assessmentTaken = this.taken;\n            if (!this.taken) {\n                localStorage.clear();\n            }\n            console.log(\"done with check status\");\n            return response;\n        } else {\n            this.taken = false;\n            this.assessmentTaken = false;\n            return Promise.resolve();\n        }\n    }\n\n    /*===============================\n    === Generating new Timed HTML ===\n    ===============================*/\n    async renderTimedAssess() {\n        console.log(\"rendering timed \");\n        // create renderedQuestionArray returns a promise\n        //\n        this.createRenderedQuestionArray();\n        if (this.random) {\n            this.randomizeRQA();\n        }\n        this.renderContainer();\n        this.renderTimer();\n        await this.renderControlButtons();\n        this.containerDiv.appendChild(this.timedDiv); // This can't be appended in renderContainer because then it renders above the timer and control buttons.\n        if (this.renderedQuestionArray.length > 1) this.renderNavControls();\n        this.renderSubmitButton();\n        this.renderFeedbackContainer();\n        this.useRunestoneServices = eBookConfig.useRunestoneServices;\n        // Replace intermediate HTML with rendered HTML\n        $(this.origElem).replaceWith(this.containerDiv);\n        // check if already taken and if so show results\n        this.styleExamElements(); // rename to renderPossibleResults\n        this.checkServer(\"timedExam\", true);\n    }\n\n    renderContainer() {\n        this.containerDiv = document.createElement(\"div\"); // container for the entire Timed Component\n        if (this.fullwidth) {\n            // allow the container to fill the width - barb\n            $(this.containerDiv).attr({\n                style: \"max-width:none\",\n            });\n        }\n        this.containerDiv.id = this.divid;\n        this.timedDiv = document.createElement(\"div\"); // div that will hold the questions for the timed assessment\n        this.navDiv = document.createElement(\"div\"); // For navigation control\n        $(this.navDiv).attr({\n            style: \"text-align:center\",\n        });\n        this.flagDiv = document.createElement(\"div\"); // div that will hold the \"Flag Question\" button\n        $(this.flagDiv).attr({\n            style: \"text-align: center\",\n        });\n        this.switchContainer = document.createElement(\"div\");\n        this.switchContainer.classList.add(\"switchcontainer\");\n        this.switchDiv = document.createElement(\"div\"); // is replaced by the questions\n        this.timedDiv.appendChild(this.navDiv);\n        this.timedDiv.appendChild(this.flagDiv); // add flagDiv to timedDiv, which holds components for navigation and questions for timed assessment\n        this.timedDiv.appendChild(this.switchContainer);\n        this.switchContainer.appendChild(this.switchDiv);\n        $(this.timedDiv).attr({\n            id: \"timed_Test\",\n            style: \"display:none\",\n        });\n    }\n\n    renderTimer() {\n        this.wrapperDiv = document.createElement(\"div\");\n        this.timerContainer = document.createElement(\"P\");\n        this.wrapperDiv.id = this.divid + \"-startWrapper\";\n        this.timerContainer.id = this.divid + \"-output\";\n        this.wrapperDiv.appendChild(this.timerContainer);\n        this.showTime();\n    }\n\n    renderControlButtons() {\n        this.controlDiv = document.createElement(\"div\");\n        $(this.controlDiv).attr({\n            id: \"controls\",\n            style: \"text-align: center\",\n        });\n        this.startBtn = document.createElement(\"button\");\n        this.pauseBtn = document.createElement(\"button\");\n        $(this.startBtn).attr({\n            class: \"btn btn-success\",\n            id: \"start\",\n            tabindex: \"0\",\n            role: \"button\",\n        });\n        this.startBtn.textContent = \"Start\";\n        this.startBtn.addEventListener(\n            \"click\",\n            async function () {\n                $(this.finishButton).hide(); // hide the finish button for now\n                $(this.flagButton).show();\n                let mess = document.createElement(\"p\");\n                mess.innerHTML =\n                    \"<strong>Warning: You will not be able to continue the exam if you close this tab, close the window, or navigate away from this page!</strong>  Make sure you click the Finish Exam button when you are done to submit your work!\";\n                this.controlDiv.appendChild(mess);\n                mess.classList.add(\"examwarning\");\n                await this.renderTimedQuestion();\n                this.startAssessment();\n            }.bind(this),\n            false\n        );\n        $(this.pauseBtn).attr({\n            class: \"btn btn-default\",\n            id: \"pause\",\n            disabled: \"true\",\n            tabindex: \"0\",\n            role: \"button\",\n        });\n        this.pauseBtn.textContent = \"Pause\";\n        this.pauseBtn.addEventListener(\n            \"click\",\n            function () {\n                this.pauseAssessment();\n            }.bind(this),\n            false\n        );\n        if (!this.taken) {\n            this.controlDiv.appendChild(this.startBtn);\n        }\n        if (!this.nopause) {\n            this.controlDiv.appendChild(this.pauseBtn);\n        }\n        this.containerDiv.appendChild(this.wrapperDiv);\n        this.containerDiv.appendChild(this.controlDiv);\n    }\n\n    renderNavControls() {\n        // making \"Prev\" button\n        this.pagNavList = document.createElement(\"ul\");\n        $(this.pagNavList).addClass(\"pagination\");\n        this.leftContainer = document.createElement(\"li\");\n        this.leftNavButton = document.createElement(\"button\");\n        this.leftNavButton.innerHTML = \"&#8249; Prev\";\n        $(this.leftNavButton).attr(\"aria-label\", \"Previous\");\n        $(this.leftNavButton).attr(\"tabindex\", \"0\");\n        $(this.leftNavButton).attr(\"role\", \"button\");\n        $(this.rightNavButton).attr(\"id\", \"prev\");\n        $(this.leftNavButton).css(\"cursor\", \"pointer\");\n        this.leftContainer.appendChild(this.leftNavButton);\n        this.pagNavList.appendChild(this.leftContainer);\n        // making \"Flag Question\" button\n        this.flaggingPlace = document.createElement(\"ul\");\n        $(this.flaggingPlace).addClass(\"pagination\");\n        this.flagContainer = document.createElement(\"li\");\n        this.flagButton = document.createElement(\"button\");\n        $(this.flagButton).addClass(\"flagBtn\");\n        this.flagButton.innerHTML = \"Flag Question\"; // name on button\n        $(this.flagButton).attr(\"aria-labelledby\", \"Flag\");\n        $(this.flagButton).attr(\"tabindex\", \"5\");\n        $(this.flagButton).attr(\"role\", \"button\");\n        $(this.flagButton).attr(\"id\", \"flag\");\n        $(this.flagButton).css(\"cursor\", \"pointer\");\n        this.flagContainer.appendChild(this.flagButton); // adding button to container\n        this.flaggingPlace.appendChild(this.flagContainer); // adding container to flaggingPlace\n        // making \"Next\" button\n        this.rightContainer = document.createElement(\"li\");\n        this.rightNavButton = document.createElement(\"button\");\n        $(this.rightNavButton).attr(\"aria-label\", \"Next\");\n        $(this.rightNavButton).attr(\"tabindex\", \"0\");\n        $(this.rightNavButton).attr(\"role\", \"button\");\n        $(this.rightNavButton).attr(\"id\", \"next\");\n        this.rightNavButton.innerHTML = \"Next &#8250;\";\n        $(this.rightNavButton).css(\"cursor\", \"pointer\");\n        this.rightContainer.appendChild(this.rightNavButton);\n        this.pagNavList.appendChild(this.rightContainer);\n        this.ensureButtonSafety();\n        this.navDiv.appendChild(this.pagNavList);\n        this.flagDiv.appendChild(this.flaggingPlace); // adds flaggingPlace to the flagDiv\n        this.break = document.createElement(\"br\");\n        this.navDiv.appendChild(this.break);\n        // render the question number jump buttons\n        this.qNumList = document.createElement(\"ul\");\n        $(this.qNumList).attr(\"id\", \"pageNums\");\n        this.qNumWrapperList = document.createElement(\"ul\");\n        $(this.qNumWrapperList).addClass(\"pagination\");\n        var tmpLi, tmpA;\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            tmpLi = document.createElement(\"li\");\n            tmpA = document.createElement(\"a\");\n            tmpA.innerHTML = i + 1;\n            $(tmpA).css(\"cursor\", \"pointer\");\n            if (i === 0) {\n                $(tmpLi).addClass(\"active\");\n            }\n            tmpLi.appendChild(tmpA);\n            this.qNumWrapperList.appendChild(tmpLi);\n        }\n        this.qNumList.appendChild(this.qNumWrapperList);\n        this.navDiv.appendChild(this.qNumList);\n        this.navBtnListeners();\n        this.flagBtnListener(); // listens for click on flag button\n        $(this.flagButton).hide();\n    }\n\n    // when moving off of a question in an active exam:\n    // 1. show that the question has been seen, or mark it broken if it is in error.\n    // 2. check and log the current answer\n    async navigateAway() {\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].state ==\n            \"broken_exam\"\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"broken\");\n        }\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].state ==\n            \"exam_ended\"\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"toolate\");\n        }\n        if (\n            this.renderedQuestionArray[this.currentQuestionIndex].question\n                .isAnswered\n        ) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"answered\");\n            await this.renderedQuestionArray[\n                this.currentQuestionIndex\n            ].question.checkCurrentAnswer();\n            if (!this.done) {\n                await this.renderedQuestionArray[\n                    this.currentQuestionIndex\n                ].question.logCurrentAnswer();\n            }\n        }\n    }\n    async handleNextPrev(event) {\n        if (!this.taken) {\n            await this.navigateAway();\n        }\n        var target = $(event.target).text();\n        if (target.match(/Next/)) {\n            // checks given text to match \"Next\"\n            if ($(this.rightContainer).hasClass(\"disabled\")) {\n                return;\n            }\n            this.currentQuestionIndex++;\n        } else if (target.match(/Prev/)) {\n            // checks given text to match \"Prev\"\n            if ($(this.leftContainer).hasClass(\"disabled\")) {\n                return;\n            }\n            this.currentQuestionIndex--;\n        }\n        await this.renderTimedQuestion();\n        this.ensureButtonSafety();\n        for (var i = 0; i < this.qNumList.childNodes.length; i++) {\n            for (\n                var j = 0;\n                j < this.qNumList.childNodes[i].childNodes.length;\n                j++\n            ) {\n                $(this.qNumList.childNodes[i].childNodes[j]).removeClass(\n                    \"active\"\n                );\n            }\n        }\n        $(\n            \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n        ).addClass(\"active\");\n        if (\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).hasClass(\"flagcolor\")\n        ) {\n            // checking for class\n            this.flagButton.innerHTML = \"Unflag Question\"; // changes text on button\n        } else {\n            this.flagButton.innerHTML = \"Flag Question\"; // changes text on button\n        }\n    }\n\n    async handleFlag(event) {\n        // called when flag button is clicked\n        var target = $(event.target).text();\n        if (target.match(/Flag Question/)) {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).addClass(\"flagcolor\"); // class will change color of question block\n            this.flagButton.innerHTML = \"Unflag Question\";\n        } else {\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n            ).removeClass(\"flagcolor\"); // will restore current color of question block\n            this.flagButton.innerHTML = \"Flag Question\"; // also sets name back\n        }\n    }\n\n    async handleNumberedNav(event) {\n        if (!this.taken) {\n            await this.navigateAway();\n        }\n        for (var i = 0; i < this.qNumList.childNodes.length; i++) {\n            for (\n                var j = 0;\n                j < this.qNumList.childNodes[i].childNodes.length;\n                j++\n            ) {\n                $(this.qNumList.childNodes[i].childNodes[j]).removeClass(\n                    \"active\"\n                );\n            }\n        }\n\n        var target = $(event.target).text();\n        let oldIndex = this.currentQuestionIndex;\n        this.currentQuestionIndex = parseInt(target) - 1;\n        if (this.currentQuestionIndex > this.renderedQuestionArray.length) {\n            console.log(`Error: bad index for ${target}`);\n            this.currentQuestionIndex = oldIndex;\n        }\n        $(\n            \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\"\n        ).addClass(\"active\");\n        if (\n            $(\n                \"ul#pageNums > ul > li:eq(\" + this.currentQuestionIndex + \")\" // checking for flagcolor class\n            ).hasClass(\"flagcolor\")\n        ) {\n            this.flagButton.innerHTML = \"Unflag Question\";\n        } else {\n            this.flagButton.innerHTML = \"Flag Question\";\n        }\n        await this.renderTimedQuestion();\n        this.ensureButtonSafety();\n    }\n\n    // set up events for navigation\n    navBtnListeners() {\n        // Next and Prev Listener\n        this.pagNavList.addEventListener(\n            \"click\",\n            this.handleNextPrev.bind(this),\n            false\n        );\n\n        // Numbered Listener\n        this.qNumList.addEventListener(\n            \"click\",\n            this.handleNumberedNav.bind(this),\n            false\n        );\n    }\n\n    // set up event for flag\n    flagBtnListener() {\n        this.flaggingPlace.addEventListener(\n            \"click\",\n            this.handleFlag.bind(this), // calls this to take action\n            false\n        );\n    }\n\n    renderSubmitButton() {\n        this.buttonContainer = document.createElement(\"div\");\n        $(this.buttonContainer).attr({\n            style: \"text-align:center\",\n        });\n        this.finishButton = document.createElement(\"button\");\n        $(this.finishButton).attr({\n            id: \"finish\",\n            class: \"btn btn-primary\",\n        });\n        this.finishButton.textContent = \"Finish Exam\";\n        this.finishButton.addEventListener(\n            \"click\",\n            async function () {\n                if (\n                    window.confirm(\n                        \"Clicking OK means you are ready to submit your answers and are finished with this assessment.\"\n                    )\n                ) {\n                    await this.finishAssessment();\n                    $(this.flagButton).hide();\n                }\n            }.bind(this),\n            false\n        );\n        this.controlDiv.appendChild(this.finishButton);\n        $(this.finishButton).hide();\n        this.timedDiv.appendChild(this.buttonContainer);\n    }\n    ensureButtonSafety() {\n        if (this.currentQuestionIndex === 0) {\n            if (this.renderedQuestionArray.length != 1) {\n                $(this.rightContainer).removeClass(\"disabled\");\n            }\n            $(this.leftContainer).addClass(\"disabled\");\n        }\n        if (\n            this.currentQuestionIndex >=\n            this.renderedQuestionArray.length - 1\n        ) {\n            if (this.renderedQuestionArray.length != 1) {\n                $(this.leftContainer).removeClass(\"disabled\");\n            }\n            $(this.rightContainer).addClass(\"disabled\");\n        }\n        if (\n            this.currentQuestionIndex > 0 &&\n            this.currentQuestionIndex < this.renderedQuestionArray.length - 1\n        ) {\n            $(this.rightContainer).removeClass(\"disabled\");\n            $(this.leftContainer).removeClass(\"disabled\");\n        }\n    }\n    renderFeedbackContainer() {\n        this.scoreDiv = document.createElement(\"P\");\n        this.scoreDiv.id = this.divid + \"results\";\n        this.scoreDiv.style.display = \"none\";\n        this.containerDiv.appendChild(this.scoreDiv);\n    }\n\n    createRenderedQuestionArray() {\n        // this finds all the assess questions in this timed assessment\n        // We need to make a list of all the questions up front so we can set up navigation\n        // but we do not want to render the questions until the student has navigated\n        // Also adds them to this.renderedQuestionArray\n\n        // todo:  This needs to be updated to account for the runestone div wrapper.\n\n        // To accommodate the selectquestion type -- which is async! we need to wrap\n        // all of this in a promise, so that we don't continue to render the timed\n        // exam until all of the questions have been realized.\n        var opts;\n        for (var i = 0; i < this.newChildren.length; i++) {\n            var tmpChild = this.newChildren[i];\n            opts = {\n                state: \"prepared\",\n                orig: tmpChild,\n                question: {},\n                useRunestoneServices: eBookConfig.useRunestoneServices,\n                timed: true,\n                assessmentTaken: this.taken,\n                timedWrapper: this.divid,\n                initAttempts: 0,\n            };\n            if ($(tmpChild).children(\"[data-component]\").length > 0) {\n                tmpChild = $(tmpChild).children(\"[data-component]\")[0];\n                opts.orig = tmpChild;\n            }\n            if ($(tmpChild).is(\"[data-component]\")) {\n                this.renderedQuestionArray.push(opts);\n            }\n        }\n    }\n\n    randomizeRQA() {\n        var currentIndex = this.renderedQuestionArray.length,\n            temporaryValue,\n            randomIndex;\n        // While there remain elements to shuffle...\n        while (currentIndex !== 0) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            temporaryValue = this.renderedQuestionArray[currentIndex];\n            this.renderedQuestionArray[currentIndex] =\n                this.renderedQuestionArray[randomIndex];\n            this.renderedQuestionArray[randomIndex] = temporaryValue;\n        }\n    }\n\n    async renderTimedQuestion() {\n        if (this.currentQuestionIndex >= this.renderedQuestionArray.length) {\n            // sometimes the user clicks in the event area for the qNumList\n            // But misses a number in that case the text is the concatenation\n            // of all the numbers in the list!\n            return;\n        }\n        // check the renderedQuestionArray to see if it has been rendered.\n        let opts = this.renderedQuestionArray[this.currentQuestionIndex];\n        let currentQuestion;\n        if (\n            opts.state === \"prepared\" ||\n            opts.state === \"forreview\" ||\n            (opts.state === \"broken_exam\" && opts.initAttempts < 3)\n        ) {\n            let tmpChild = opts.orig;\n            if ($(tmpChild).is(\"[data-component=selectquestion]\")) {\n                if (this.done && opts.state == \"prepared\") {\n                    this.renderedQuestionArray[\n                        this.currentQuestionIndex\n                    ].state = \"exam_ended\";\n                } else {\n                    // SelectOne is async and will replace itself in this array with\n                    // the actual selected question\n                    opts.rqa = this.renderedQuestionArray;\n                    let newq = new SelectOne(opts);\n                    this.renderedQuestionArray[this.currentQuestionIndex] = {\n                        question: newq,\n                    };\n                    try {\n                        await newq.initialize();\n                        if (opts.state == \"broken_exam\") {\n                            // remove the broken class from this question if we get here.\n                            $(\n                                `ul#pageNums > ul > li:eq(${this.currentQuestionIndex})`\n                            ).removeClass(\"broken\");\n                        }\n                    } catch (e) {\n                        opts.state = \"broken_exam\";\n                        this.renderedQuestionArray[this.currentQuestionIndex] =\n                            opts;\n                        console.log(\n                            `Error initializing question: Details ${e}`\n                        );\n                    }\n                }\n            } else if ($(tmpChild).is(\"[data-component]\")) {\n                let componentKind = $(tmpChild).data(\"component\");\n                this.renderedQuestionArray[this.currentQuestionIndex] = {\n                    question: window.component_factory[componentKind](opts),\n                    state: opts.state,\n                };\n            }\n        } else if (opts.state === \"broken_exam\") {\n            return;\n        }\n\n        currentQuestion =\n            this.renderedQuestionArray[this.currentQuestionIndex].question;\n        if (opts.state === \"forreview\") {\n            await currentQuestion.component_ready_promise;\n            await currentQuestion.checkCurrentAnswer();\n            currentQuestion.renderFeedback();\n            currentQuestion.disableInteraction();\n        }\n\n        if (!this.visited.includes(this.currentQuestionIndex)) {\n            this.visited.push(this.currentQuestionIndex);\n            if (\n                this.visited.length === this.renderedQuestionArray.length &&\n                !this.done\n            ) {\n                $(this.finishButton).show();\n            }\n        }\n\n        if (currentQuestion.containerDiv) {\n            $(this.switchDiv).replaceWith(currentQuestion.containerDiv);\n            this.switchDiv = currentQuestion.containerDiv;\n        }\n\n        // If the timed component has listeners, those might need to be reinitialized\n        // This flag will only be set in the elements that need it--it will be undefined in the others and thus evaluate to false\n        if (currentQuestion.needsReinitialization) {\n            currentQuestion.reinitializeListeners(this.taken);\n        }\n    }\n\n    /*=================================\n    === Timer and control Functions ===\n    =================================*/\n    handlePrevAssessment() {\n        $(this.startBtn).hide();\n        $(this.pauseBtn).attr(\"disabled\", true);\n        $(this.finishButton).attr(\"disabled\", true);\n        this.running = 0;\n        this.done = 1;\n        // showFeedback sand showResults should both be true before we show the\n        // questions and their state of correctness.\n        if (this.showResults && this.showFeedback) {\n            $(this.timedDiv).show();\n            this.restoreAnsweredQuestions(); // do not log these results\n        } else {\n            $(this.pauseBtn).hide();\n            $(this.timerContainer).hide();\n        }\n    }\n    startAssessment() {\n        if (!this.taken) {\n            $(\"#relations-next\").hide(); // hide the next page button for now\n            $(\"#relations-prev\").hide(); // hide the previous button for now\n            $(this.startBtn).hide();\n            $(this.pauseBtn).attr(\"disabled\", false);\n            if (this.running === 0 && this.paused === 0) {\n                this.running = 1;\n                this.lastTime = Date.now();\n                $(this.timedDiv).show();\n                this.increment();\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"start\",\n                    div_id: this.divid,\n                });\n                var timeStamp = new Date();\n                var storageObj = {\n                    answer: [0, 0, this.renderedQuestionArray.length, 0],\n                    timestamp: timeStamp,\n                };\n                localStorage.setItem(\n                    this.localStorageKey(),\n                    JSON.stringify(storageObj)\n                );\n            }\n            $(window).on(\n                \"beforeunload\",\n                function (event) {\n                    // this actual value gets ignored by newer browsers\n                    if (this.done) {\n                        return;\n                    }\n                    event.preventDefault();\n                    event.returnValue =\n                        \"Are you sure you want to leave?  Your work will be lost! And you will need your instructor to reset the exam!\";\n                    return \"Are you sure you want to leave?  Your work will be lost!\";\n                }.bind(this)\n            );\n            window.addEventListener(\n                \"pagehide\",\n                async function (event) {\n                    if (!this.done) {\n                        await this.finishAssessment();\n                        console.log(\"Exam exited by leaving page\");\n                    }\n                }.bind(this)\n            );\n        } else {\n            this.handlePrevAssessment();\n        }\n    }\n    pauseAssessment() {\n        if (this.done === 0) {\n            if (this.running === 1) {\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"pause\",\n                    div_id: this.divid,\n                });\n                this.running = 0;\n                this.paused = 1;\n                this.pauseBtn.innerHTML = \"Resume\";\n                $(this.timedDiv).hide();\n            } else {\n                this.logBookEvent({\n                    event: \"timedExam\",\n                    act: \"resume\",\n                    div_id: this.divid,\n                });\n                this.running = 1;\n                this.paused = 0;\n                this.increment();\n                this.pauseBtn.innerHTML = \"Pause\";\n                $(this.timedDiv).show();\n            }\n        }\n    }\n\n    showTime() {\n        if (this.showTimer) {\n            var mins = Math.floor(this.timeLimit / 60);\n            var secs = Math.floor(this.timeLimit) % 60;\n            var minsString = mins;\n            var secsString = secs;\n            if (mins < 10) {\n                minsString = \"0\" + mins;\n            }\n            if (secs < 10) {\n                secsString = \"0\" + secs;\n            }\n            var beginning = \"Time Remaining    \";\n            if (!this.limitedTime) {\n                beginning = \"Time Taken    \";\n            }\n            var timeString = beginning + minsString + \":\" + secsString;\n            if (this.done || this.taken) {\n                var minutes = Math.floor(this.timeTaken / 60);\n                var seconds = Math.floor(this.timeTaken % 60);\n                if (minutes < 10) {\n                    minutes = \"0\" + minutes;\n                }\n                if (seconds < 10) {\n                    seconds = \"0\" + seconds;\n                }\n                timeString = \"Time taken: \" + minutes + \":\" + seconds;\n            }\n            this.timerContainer.innerHTML = timeString;\n            var timeTips = document.getElementsByClassName(\"timeTip\");\n            for (var i = 0; i <= timeTips.length - 1; i++) {\n                timeTips[i].title = timeString;\n            }\n        } else {\n            $(this.timerContainer).hide();\n        }\n    }\n\n    increment() {\n        // if running (not paused) and not taken\n        if (this.running === 1 && !this.taken) {\n            setTimeout(\n                function () {\n                    // When a browser loses focus, setTimeout may not be called on the\n                    // schedule expected.  Browsers are free to save power by lengthening\n                    // the interval to some longer time.  So we cannot just subtract 1\n                    // from the timeLimit we need to measure the elapsed time from the last\n                    // call to the current call and subtract that number of seconds.\n                    let currentTime = Date.now();\n                    if (this.limitedTime) {\n                        // If there's a time limit, count down to 0\n                        this.timeLimit =\n                            this.timeLimit -\n                            Math.floor((currentTime - this.lastTime) / 1000);\n                    } else {\n                        // Else count up to keep track of how long it took to complete\n                        this.timeLimit =\n                            this.timeLimit +\n                            Math.floor((currentTime - this.lastTime) / 1000);\n                    }\n                    this.lastTime = currentTime;\n                    localStorage.setItem(\n                        eBookConfig.email + \":\" + this.divid + \"-time\",\n                        this.timeLimit\n                    );\n                    this.showTime();\n                    if (this.timeLimit > 0) {\n                        this.increment();\n                        // ran out of time\n                    } else {\n                        $(this.startBtn).attr({\n                            disabled: \"true\",\n                        });\n                        $(this.finishButton).attr({\n                            disabled: \"true\",\n                        });\n                        this.running = 0;\n                        this.done = 1;\n                        if (!this.taken) {\n                            this.taken = true;\n                            // embed the message in the page -- an alert actually prevents\n                            // the answers from being submitted and if a student closes their\n                            // laptop then the answers will not be submitted ever!  Even when they\n                            // reopen the laptop their session cookie is likely invalid.\n                            let mess = document.createElement(\"h1\");\n                            mess.innerHTML =\n                                \"Sorry but you ran out of time. Your answers are being submitted\";\n                            this.controlDiv.appendChild(mess);\n                            this.finishAssessment();\n                        }\n                    }\n                }.bind(this),\n                1000\n            );\n        }\n    }\n\n    styleExamElements() {\n        // Checks if this exam has been taken before\n        $(this.timerContainer).css({\n            width: \"50%\",\n            margin: \"0 auto\",\n            \"background-color\": \"#DFF0D8\",\n            \"text-align\": \"center\",\n            border: \"2px solid #DFF0D8\",\n            \"border-radius\": \"25px\",\n        });\n        $(this.scoreDiv).css({\n            width: \"50%\",\n            margin: \"0 auto\",\n            \"background-color\": \"#DFF0D8\",\n            \"text-align\": \"center\",\n            border: \"2px solid #DFF0D8\",\n            \"border-radius\": \"25px\",\n        });\n        $(\".tooltipTime\").css({\n            margin: \"0\",\n            padding: \"0\",\n            \"background-color\": \"black\",\n            color: \"white\",\n        });\n    }\n\n    async finishAssessment() {\n        $(\"#relations-next\").show(); // show the next page button for now\n        $(\"#relations-prev\").show(); // show the previous button for now\n        if (!this.showFeedback) {\n            // bje - changed from showResults\n            $(this.timedDiv).hide();\n            $(this.pauseBtn).hide();\n            $(this.timerContainer).hide();\n        }\n        this.findTimeTaken();\n        this.running = 0;\n        this.done = 1;\n        this.taken = 1;\n        await this.finalizeProblems();\n        this.checkScore();\n        this.displayScore();\n        this.storeScore();\n        this.logScore();\n        $(this.pauseBtn).attr(\"disabled\", true);\n        this.finishButton.disabled = true;\n        $(window).off(\"beforeunload\");\n        // turn off the pagehide listener\n        let assignment_id = this.divid;\n        setTimeout(function () {\n            jQuery.ajax({\n                url: eBookConfig.app + \"/assignments/student_autograde\",\n                type: \"POST\",\n                dataType: \"JSON\",\n                data: {\n                    assignment_id: assignment_id,\n                    is_timed: true,\n                },\n                success: function (retdata) {\n                    if (retdata.success == false) {\n                        console.log(retdata.message);\n                    } else {\n                        console.log(\"Autograder completed\");\n                    }\n                },\n            });\n        }, 2000);\n    }\n\n    // finalizeProblems\n    // ----------------\n    async finalizeProblems() {\n        // Because we have submitted each question as we navigate we only need to\n        // send the final version of the question the student is on when they press the\n        // finish exam button.\n\n        var currentQuestion =\n            this.renderedQuestionArray[this.currentQuestionIndex].question;\n        await currentQuestion.checkCurrentAnswer();\n        await currentQuestion.logCurrentAnswer();\n        currentQuestion.renderFeedback();\n        currentQuestion.disableInteraction();\n\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            let currentQuestion = this.renderedQuestionArray[i];\n            // set the state to forreview so we know that feedback may be appropriate\n            if (currentQuestion.state !== \"broken_exam\") {\n                currentQuestion.state = \"forreview\";\n                currentQuestion.question.disableInteraction();\n            }\n        }\n\n        if (!this.showFeedback) {\n            this.hideTimedFeedback();\n        }\n    }\n\n    // restoreAnsweredQuestions\n    // ------------------------\n    restoreAnsweredQuestions() {\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var currentQuestion = this.renderedQuestionArray[i];\n            if (currentQuestion.state === \"prepared\") {\n                currentQuestion.state = \"forreview\";\n            }\n        }\n    }\n\n    // hideTimedFeedback\n    // -----------------\n    hideTimedFeedback() {\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var currentQuestion = this.renderedQuestionArray[i].question;\n            currentQuestion.hideFeedback();\n        }\n    }\n\n    // checkScore\n    // ----------\n    // This is a simple all or nothing score of one point per question for\n    // that includes our best guess if a question was skipped.\n    checkScore() {\n        this.correctStr = \"\";\n        this.skippedStr = \"\";\n        this.incorrectStr = \"\";\n        // Gets the score of each problem\n        for (var i = 0; i < this.renderedQuestionArray.length; i++) {\n            var correct =\n                this.renderedQuestionArray[i].question.checkCorrectTimed();\n            if (correct == \"T\") {\n                this.score++;\n                this.correctStr = this.correctStr + (i + 1) + \", \";\n            } else if (correct == \"F\") {\n                this.incorrect++;\n                this.incorrectStr = this.incorrectStr + (i + 1) + \", \";\n            } else if (correct === null || correct === \"I\") {\n                this.skipped++;\n                this.skippedStr = this.skippedStr + (i + 1) + \", \";\n            } else {\n                // ignored question; just do nothing\n            }\n        }\n        // remove extra comma and space at end if any\n        if (this.correctStr.length > 0)\n            this.correctStr = this.correctStr.substring(\n                0,\n                this.correctStr.length - 2\n            );\n        else this.correctStr = \"None\";\n        if (this.skippedStr.length > 0)\n            this.skippedStr = this.skippedStr.substring(\n                0,\n                this.skippedStr.length - 2\n            );\n        else this.skippedStr = \"None\";\n        if (this.incorrectStr.length > 0)\n            this.incorrectStr = this.incorrectStr.substring(\n                0,\n                this.incorrectStr.length - 2\n            );\n        else this.incorrectStr = \"None\";\n    }\n    findTimeTaken() {\n        if (this.limitedTime) {\n            this.timeTaken = this.startingTime - this.timeLimit;\n        } else {\n            this.timeTaken = this.timeLimit;\n        }\n    }\n    storeScore() {\n        var storage_arr = [];\n        storage_arr.push(\n            this.score,\n            this.correctStr,\n            this.incorrect,\n            this.incorrectStr,\n            this.skipped,\n            this.skippedStr,\n            this.timeTaken\n        );\n        var timeStamp = new Date();\n        var storageObj = JSON.stringify({\n            answer: storage_arr,\n            timestamp: timeStamp,\n        });\n        localStorage.setItem(this.localStorageKey(), storageObj);\n    }\n    // _`timed exam endpoint parameters`\n    //----------------------------------\n    logScore() {\n        this.logBookEvent({\n            event: \"timedExam\",\n            act: \"finish\",\n            div_id: this.divid,\n            correct: this.score,\n            incorrect: this.incorrect,\n            skipped: this.skipped,\n            time_taken: this.timeTaken,\n        });\n    }\n    shouldUseServer(data) {\n        // We override the RunestoneBase version because there is no \"correct\" attribute, and there are 2 possible localStorage schemas\n        // --we also want to default to local storage because it contains more information specifically which questions are correct, incorrect, and skipped.\n        var storageDate;\n        if (localStorage.length === 0) return true;\n        var storageObj = localStorage.getItem(this.localStorageKey());\n        if (storageObj === null) return true;\n        try {\n            var storedData = JSON.parse(storageObj).answer;\n            if (storedData.length == 4) {\n                if (\n                    data.correct == storedData[0] &&\n                    data.incorrect == storedData[1] &&\n                    data.skipped == storedData[2] &&\n                    data.timeTaken == storedData[3]\n                )\n                    return true;\n            } else if (storedData.length == 7) {\n                if (\n                    data.correct == storedData[0] &&\n                    data.incorrect == storedData[2] &&\n                    data.skipped == storedData[4] &&\n                    data.timeTaken == storedData[6]\n                ) {\n                    return false; // In this case, because local storage has more info, we want to use that if it's consistent\n                }\n            }\n            storageDate = new Date(JSON.parse(storageObj[1]).timestamp);\n        } catch (err) {\n            // error while parsing; likely due to bad value stored in storage\n            console.log(err.message);\n            localStorage.removeItem(this.localStorageKey());\n            return true;\n        }\n        var serverDate = new Date(data.timestamp);\n        if (serverDate < storageDate) {\n            this.logScore();\n            return false;\n        }\n        return true;\n    }\n\n    checkLocalStorage() {\n        var len = localStorage.length;\n        if (len > 0) {\n            if (localStorage.getItem(this.localStorageKey()) !== null) {\n                this.taken = 1;\n                this.restoreAnswers(\"\");\n            } else {\n                this.taken = 0;\n            }\n        } else {\n            this.taken = 0;\n        }\n    }\n    async restoreAnswers(data) {\n        this.taken = 1;\n        var tmpArr;\n        if (data === \"\") {\n            try {\n                tmpArr = JSON.parse(\n                    localStorage.getItem(this.localStorageKey())\n                ).answer;\n            } catch (err) {\n                // error while parsing; likely due to bad value stored in storage\n                console.log(err.message);\n                localStorage.removeItem(this.localStorageKey());\n                this.taken = 0;\n                return;\n            }\n        } else {\n            // Parse results from the database\n            tmpArr = [\n                parseInt(data.correct),\n                parseInt(data.incorrect),\n                parseInt(data.skipped),\n                parseInt(data.time_taken),\n                data.reset,\n            ];\n            this.setLocalStorage(tmpArr);\n        }\n        if (tmpArr.length == 1) {\n            // Exam was previously reset\n            this.reset = true;\n            this.taken = 0;\n            return;\n        }\n        if (tmpArr.length == 4) {\n            // Accidental Reload OR Database Entry\n            this.score = tmpArr[0];\n            this.incorrect = tmpArr[1];\n            this.skipped = tmpArr[2];\n            this.timeTaken = tmpArr[3];\n        } else if (tmpArr.length == 5) {\n            this.score = tmpArr[0];\n            this.incorrect = tmpArr[1];\n            this.skipped = tmpArr[2];\n            this.timeTaken = tmpArr[3];\n        } else if (tmpArr.length == 7) {\n            // Loaded Completed Exam\n            this.score = tmpArr[0];\n            this.correctStr = tmpArr[1];\n            this.incorrect = tmpArr[2];\n            this.incorrectStr = tmpArr[3];\n            this.skipped = tmpArr[4];\n            this.skippedStr = tmpArr[5];\n            this.timeTaken = tmpArr[6];\n        } else {\n            // Set localStorage in case of \"accidental\" reload\n            this.score = 0;\n            this.incorrect = 0;\n            this.skipped = this.renderedQuestionArray.length;\n            this.timeTaken = 0;\n        }\n        if (this.taken) {\n            if (this.skipped === this.renderedQuestionArray.length) {\n                this.showFeedback = false;\n            }\n            this.handlePrevAssessment();\n        }\n        await this.renderTimedQuestion();\n        this.displayScore();\n        this.showTime();\n    }\n    setLocalStorage(parsedData) {\n        var timeStamp = new Date();\n        var storageObj = {\n            answer: parsedData,\n            timestamp: timeStamp,\n        };\n        localStorage.setItem(\n            this.localStorageKey(),\n            JSON.stringify(storageObj)\n        );\n    }\n    displayScore() {\n        if (this.showResults) {\n            var scoreString = \"\";\n            var numQuestions;\n            var percentCorrect;\n            // if we have some information\n            if (\n                this.correctStr.length > 0 ||\n                this.incorrectStr.length > 0 ||\n                this.skippedStr.length > 0\n            ) {\n                scoreString = `Num Correct: ${this.score}. Questions: ${this.correctStr}<br>Num Wrong: ${this.incorrect}. Questions: ${this.incorrectStr}<br>Num Skipped: ${this.skipped}. Questions: ${this.skippedStr}<br>`;\n                numQuestions = this.score + this.incorrect + this.skipped;\n                percentCorrect = (this.score / numQuestions) * 100;\n                scoreString += \"Percent Correct: \" + percentCorrect.toFixed(2) + \"%\";\n                $(this.scoreDiv).html(scoreString);\n                this.scoreDiv.style.display = \"block\";\n            } else {\n                scoreString = `Num Correct: ${this.score}<br>Num Wrong: ${this.incorrect}<br>Num Skipped: ${this.skipped}<br>`;\n                numQuestions = this.score + this.incorrect + this.skipped;\n                percentCorrect = (this.score / numQuestions) * 100;\n                scoreString += \"Percent Correct: \" + percentCorrect.toFixed(2) + \"%\";\n                $(this.scoreDiv).html(scoreString);\n                this.scoreDiv.style.display = \"block\";\n            }\n            this.highlightNumberedList();\n        } else {\n            $(this.scoreDiv).html(\n                \"Thank you for taking the exam.  Your answers have been recorded.\"\n            );\n            this.scoreDiv.style.display = \"block\";\n        }\n    }\n    highlightNumberedList() {\n        var correctCount = this.correctStr;\n        var incorrectCount = this.incorrectStr;\n        var skippedCount = this.skippedStr;\n        correctCount = correctCount.replace(/ /g, \"\").split(\",\");\n        incorrectCount = incorrectCount.replace(/ /g, \"\").split(\",\");\n        skippedCount = skippedCount.replace(/ /g, \"\").split(\",\");\n        $(function () {\n            var numberedBtns = $(\"ul#pageNums > ul > li\");\n            if (numberedBtns.hasClass(\"answered\")) {\n                numberedBtns.removeClass(\"answered\");\n            }\n            for (var i = 0; i < correctCount.length; i++) {\n                var test = parseInt(correctCount[i]) - 1;\n                numberedBtns\n                    .eq(parseInt(correctCount[i]) - 1)\n                    .addClass(\"correctCount\");\n            }\n            for (var j = 0; j < incorrectCount.length; j++) {\n                numberedBtns\n                    .eq(parseInt(incorrectCount[j]) - 1)\n                    .addClass(\"incorrectCount\");\n            }\n            for (var k = 0; k < skippedCount.length; k++) {\n                numberedBtns\n                    .eq(parseInt(skippedCount[k]) - 1)\n                    .addClass(\"skippedCount\");\n            }\n        });\n    }\n}\n\n/*=======================================================\n=== Function that calls the constructors on page load ===\n=======================================================*/\n$(document).on(\"runestone:login-complete\", function () {\n    $(\"[data-component=timedAssessment]\").each(function (index) {\n        TimedList[this.id] = new Timed({\n            orig: this,\n            useRunestoneServices: eBookConfig.useRunestoneServices,\n        });\n    });\n});\n"],"names":["$","i18n","load","en","msg_no_answer","msg_fitb_check_me","msg_fitb_compare_me","FITBList","FITB","constructor","opts","super","orig","this","useRunestoneServices","origElem","divid","id","correct","feedbackArray","JSON","parse","scriptSelector","html","createFITBElement","caption","addCaption","checkServer","Prism","highlightAllUnder","containerDiv","root_node","find","renderFITBInput","renderFITBButtons","renderFITBFeedbackDiv","replaceWith","document","createElement","children","clone","appendTo","remove","ba","attr","blankArray","toArray","blank","change","recordAnswered","bind","isAnswered","submitButton","textContent","class","name","type","addEventListener","checkCurrentAnswer","logCurrentAnswer","appendChild","compareButton","disabled","compareFITBAnswers","feedBackDiv","restoreAnswers","data","arr","answer","Array","isArray","Error","err","split","i","length","displayFeed","isCorrectArray","renderFeedback","checkLocalStorage","storedData","graderactive","localStorage","ex","getItem","localStorageKey","console","log","message","removeItem","setLocalStorage","key","setItem","stringify","given_arr","push","value","eBookConfig","enableCompareMe","enableCompareButton","evaluateAnswers","isTimed","async","sid","feedback","timestamp","Date","event","act","div_id","logBookEvent","detail","given","fbl","j","RegExp","test","assert","min","max","actual","is_correct","percent","filter","Boolean","removeClass","addClass","feedback_html","slice","innerHTML","MathJax","queueMathJax","body","course","jQuery","get","new_server_prefix","compareFITB","status","whatever","answers","res","miscdata","row","count","modal","disableInteraction","on","each","index","closest","TimedFITB","renderTimedIcon","inputDiv","hideButtons","needsReinitialization","hide","component","timeIconDiv","timeIcon","src","style","className","title","prepend","checkCorrectTimed","hideFeedback","display","reinitializeListeners","window","component_factory","fillintheblank","timed","saList","undefined","ShortAnswer","question","optional","attachURL","is","mathjax","attachment","placeholder","renderHTML","getAttribute","newForm","action","fieldSet","firstLegendDiv","jInputDiv","jOptionsDiv","jLabel","jTextArea","self","onchange","css","rows","cols","feedbackDiv","renderedAnswer","buttonDiv","onclick","randomSpan","otherOptionsDiv","attachDiv","viewButton","viewFile","fileUpload","renderMath","replace","text","getElementById","val","uploadFile","p","tsString","toLocaleString","last_answer","current_answer","toggle_answer_button","click","display_timestamp","button_text","last_timestamp","feedbackStr","score","comment","files","FormData","append","fetch","method","then","response","json","catch","error","open","write","alert","TimedShortAnswer","shortanswer","TimedList","Timed","childNodes","visited","timeLimit","limitedTime","isNaN","parseInt","startingTime","showFeedback","showResults","random","showTimer","fullwidth","nopause","enableScratchAC","running","paused","done","taken","incorrect","correctStr","incorrectStr","skippedStr","skipped","currentQuestionIndex","renderedQuestionArray","getNewChildren","enableDebug","oncontextmenu","checkAssessmentStatus","renderTimedAssess","newChildren","runestoneChildren","querySelectorAll","sendInfo","course_name","request","Request","headers","jsonHeaders","tookAssessment","assessmentTaken","clear","Promise","resolve","createRenderedQuestionArray","randomizeRQA","renderContainer","renderTimer","renderControlButtons","timedDiv","renderNavControls","renderSubmitButton","renderFeedbackContainer","styleExamElements","navDiv","flagDiv","switchContainer","classList","add","switchDiv","wrapperDiv","timerContainer","showTime","controlDiv","startBtn","pauseBtn","tabindex","role","finishButton","flagButton","show","mess","renderTimedQuestion","startAssessment","pauseAssessment","tmpLi","tmpA","pagNavList","leftContainer","leftNavButton","rightNavButton","flaggingPlace","flagContainer","rightContainer","ensureButtonSafety","break","qNumList","qNumWrapperList","navBtnListeners","flagBtnListener","state","navigateAway","target","match","hasClass","oldIndex","handleNextPrev","handleNumberedNav","handleFlag","buttonContainer","confirm","finishAssessment","scoreDiv","tmpChild","timedWrapper","initAttempts","temporaryValue","randomIndex","currentIndex","Math","floor","currentQuestion","rqa","newq","initialize","e","componentKind","component_ready_promise","includes","handlePrevAssessment","restoreAnsweredQuestions","lastTime","now","increment","timeStamp","storageObj","preventDefault","returnValue","mins","secs","minsString","secsString","beginning","timeString","minutes","timeTaken","seconds","timeTips","getElementsByClassName","setTimeout","currentTime","email","width","margin","border","padding","color","findTimeTaken","finalizeProblems","checkScore","displayScore","storeScore","logScore","off","assignment_id","ajax","url","app","dataType","is_timed","success","retdata","hideTimedFeedback","substring","storage_arr","time_taken","shouldUseServer","storageDate","tmpArr","reset","parsedData","numQuestions","scoreString","toFixed","highlightNumberedList","correctCount","incorrectCount","skippedCount","numberedBtns","eq","k"],"sourceRoot":""}